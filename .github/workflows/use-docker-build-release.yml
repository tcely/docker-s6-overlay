on:
  workflow_call:
    inputs:
      targets:
        description: 'The targets to build.'
        required: true
        type: string
      push:
        description: 'Whether to push the built images.'
        required: false
        type: boolean
        default: false
      images:
        description: 'The Docker images to build.'
        required: true
        type: string
      tag_name:
        description: 'The tag name to use for the release.'
        required: true
        type: string
      tag_suffix:
        description: |
          The `tag_name` suffix to use for the release.
          
          If not provided, no suffix will be added.
          Otherwise, it will be appended to the `tag_name` with a hyphen.

          E.g. `symlinks` will result in `tag_name-symlinks`.
        required: false
        type: string
        default: ''
    secrets:
      DOCKERHUB_TOKEN:
        description: 'Docker Hub token for authentication.'
        required: false

env:
  S6_VERSION: ${{ inputs.tag_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check for registry token secrets
        id: 'has_secret'
        env:
          DOCKERHUB: ${{ secrets.DOCKERHUB_TOKEN }}
          GITHUB: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          for var in DOCKERHUB GITHUB
          do
            if ! declare -p "${var}" | grep -Fe "${var}"'=""' > /dev/null
            then
              echo "${var}=true" >> "${GITHUB_OUTPUT}"
            fi
          done

      - name: Login to Docker Hub
        if: ${{ inputs.push && steps.has_secret.outputs.DOCKERHUB }}
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io
        if: ${{ inputs.push && steps.has_secret.outputs.GITHUB }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.images }}
          flavor: latest=false
          tags: type=raw,value=${{ inputs.tag_name }}${{ (inputs.tag_suffix != '' && format('-{0}', inputs.tag_suffix)) || '' }}

      - name: Generate GitHub metadata
        id: github-meta
        uses: dockerbakery/github-metadata-action@v2

      - name: Download and verify s6-overlay tarballs
        run: |
          docker buildx bake download --no-cache

      - name: Build and push
        uses: docker/bake-action@v6
        with:
          targets: ${{ inputs.targets }}
          push: ${{ inputs.push }}
          source: .
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.docker-meta.outputs.bake-file }}
            cwd://${{ steps.github-meta.outputs.bake-file }}
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
